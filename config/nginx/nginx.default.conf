error_log stderr error;
pid /run/nginx.pid;

events {}

http {
    log_format json_format escape=json '{"timestamp": $time_iso8601, "source": "nginx", "status": $status, "method": "$request_method", "uri": "$request_uri", "user_agent": "$http_user_agent", "resp_time": $request_time, "upstream_addr": "$upstream_addr", "resp_body_size": $body_bytes_sent, "host": "$http_host", "address": "$remote_addr", "request_length": $request_length}';
    gzip on;

    upstream app_server {
        # fail_timeout=0 means we always retry an upstream even if it failed
        # to return a good HTTP response

        # for UNIX domain socket setups
        # server unix:/tmp/gunicorn.sock fail_timeout=0;

        # for a TCP configuration
        server mapproxy:8000 fail_timeout=0;
      }

    server {
        listen 80;
        server_name mapproxy;

        client_header_buffer_size   12288; # 12K
        large_client_header_buffers 4 12288; # 12K

        root /var/www/html/;

        access_log /dev/stdout json_format;

        location /mapproxy/ {
            rewrite /mapproxy(.+) $1 break;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header Host $http_host;
            # we don't want nginx trying to do something clever with
            # redirects, we set the Host: header above already.
            proxy_redirect off;
            proxy_pass http://app_server;

        }
    }
}
