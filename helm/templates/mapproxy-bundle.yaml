{{- define "mapproxy-chart.mapproxy-bundle" }}
  {{- $cloudProviderDockerRegistryUrl := include "mapproxy.cloudProviderDockerRegistryUrl" . -}}
  {{- $cloudProviderImagePullSecretName := include "mapproxy.cloudProviderImagePullSecretName" . -}}
  {{- $postgresSecretName := ternary .Values.rasterCommon.db.secrets.externalSecretName (printf "%s%s" .Release.Name "-postgres-secret") .Values.rasterCommon.db.secrets.useExternal }}
  {{- $s3SecretName := ternary .Values.rasterCommon.storage.s3.secretName (printf "%s%s" .Release.Name  "-s3-secret") (ne .Values.rasterCommon.storage.s3.secretName "") }}
  replicas: {{ .replicaCount }}
  selector:
    matchLabels:
      app: {{ .chartName }}-{{ .type }}
      release: {{ .releaseName }}-{{ .type }}
      run: {{ .releaseName }}-{{ .chartName }}-{{ .type }}
      app.kubernetes.io/name: {{ include "mapproxy.name" . }}-{{ .type }}
      app.kubernetes.io/instance: {{ .releaseName }}-{{ .type }}
  template:
    metadata:
      labels:
        app: {{ .chartName }}-{{ .type }}
        release: {{ .releaseName }}-{{ .type }}
        run: {{ .releaseName }}-{{ .chartName }}-{{ .type }}
        app.kubernetes.io/name: {{ include "mapproxy.name" . }}-{{ .type }}
        app.kubernetes.io/instance: {{ .releaseName }}-{{ .type }}
      {{- if .Values.resetOnConfigChange }}
      annotations:
        checksum/configmap: {{
          include (print $.Template.BasePath "/mapproxy-configmap.yaml") . | sha256sum }}
        prometheus.io/port: {{ .Values.env.metrics.prometheus.port | quote }}
        prometheus.io/scrape: {{ .Values.env.metrics.prometheus.scrape | quote }}
      {{- end }}
    spec:
    {{- if $cloudProviderImagePullSecretName }}
      imagePullSecrets:
        - name: {{ $cloudProviderImagePullSecretName | quote }}
    {{- end }}
      initContainers:
        ######################################################### Init Container Deployment #########################################################
        {{- template "mapproxy-chart.init-container" (merge (dict "releaseName" .releaseName "chartName" .chartName "cloudProviderDockerRegistryUrl" $cloudProviderDockerRegistryUrl "s3SecretName" $s3SecretName "postgresSecretName" $postgresSecretName) .)}}
      containers:
        ######################################################### MapProxy Deployment #########################################################
        {{- template "mapproxy-chart.mapproxy-container" (merge (dict "releaseName" .releaseName "chartName" .chartName "cloudProviderDockerRegistryUrl" $cloudProviderDockerRegistryUrl "s3SecretName" $s3SecretName "resources" .resources) .) }}
        ######################################################### uwsgi Deployment #########################################################
        {{- template "mapproxy-chart.uwsgi-exporter-container" (merge (dict "releaseName" .releaseName "chartName" .chartName "cloudProviderDockerRegistryUrl" $cloudProviderDockerRegistryUrl "resources" .Values.uwsgiExporter.resources) .) }}
        ######################################################### Mapproxinator Deployment #########################################################
        {{- template "mapproxy-chart.mapproxinator-container" (merge (dict "releaseName" .releaseName "chartName" .chartName "cloudProviderDockerRegistryUrl" $cloudProviderDockerRegistryUrl "s3SecretName" $s3SecretName "postgresSecretName" $postgresSecretName) .) }}
      volumes:
        - name: mapproxy-config
          emptyDir: {}
        {{- if .Values.rasterCommon.db.sslEnabled }}
        - name: ca-file
          secret:
            secretName: {{ $postgresSecretName }}
            items:
              - key: caFile
                path: ca.pem
        - name: key-file
          secret:
            secretName: {{ $postgresSecretName }}
            items:
              - key: keyFile
                path: key.pem
        - name: cert-file
          secret:
            secretName: {{ $postgresSecretName }}
            items:
              - key: certFile
                path: cert.pem
        {{- end }}    
        - name: uwsgi-config
          configMap:
            name: {{ .releaseName }}-init-configmap
            items:
            - key: "UWSGI_INI"
              path: "uwsgi.ini"
            - key: "LOG_CONF"
              path: "log.yaml"
        {{- if .Values.rasterCommon.storage.fs.internalPvc.enabled }}
        - name: sources-storage
          persistentVolumeClaim:
            claimName: {{ .Values.rasterCommon.storage.fs.internalPvc.name }}
        {{- end }}
{{- end }}
