{{- define "mapproxy-chart.mapproxinator-container" }}
{{- $mapproxinatorConfigmapName := include "mapproxinator-configmap.fullname" . -}}
{{- $db := (include "common.db.merged" .) | fromYaml }}
{{- $storage := (include "common.storage.merged" .) | fromYaml }}
        - name: mapproxinator
          image: {{ .cloudProviderDockerRegistryUrl }}{{ .Values.mapproxinator.image.repository }}:{{ .Values.mapproxinator.image.tag }}
          imagePullPolicy: {{ .Values.imagePullPolicy }}
          env:
            {{- if .Values.global.ca.secretName }}
            - name: REQUESTS_CA_BUNDLE
              value: {{ printf "%s/%s" .Values.global.ca.path .Values.global.ca.key | quote }}
            - name: NODE_EXTRA_CA_CERTS
              value: {{ printf "%s/%s" .Values.global.ca.path .Values.global.ca.key | quote }}
            {{- end }}
            - name: INIT_MODE
              value: "false"
            - name: UPDATED_TIME_JSON_FILE_PATH
              value: /mapproxy/updated_time.json
            - name: YAML_DESTINATION_FILE_PATH
              value: /mapproxy/mapproxy.yaml
            - name: UWSGI_FIFO_FILE_PATH
              value: /uwsgi_config/fifo0
            {{- if eq (upper $storage.mapproxyConfigProvider) "FS" }}
            - name: FS_YAML_SOURCE_FILE_PATH
              value: /configSource/mapproxy.yaml
            {{- end }}
            {{- if (eq (upper $storage.mapproxyConfigProvider) "S3") }}
            - name: S3_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: {{ .s3SecretName }}
                  key: accessKeyId
            - name: S3_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ .s3SecretName }}
                  key: secretAccessKey
            {{- end }}
            {{- if eq (upper $storage.mapproxyConfigProvider) "DB" }} 
            - name: DB_USER
              valueFrom:
                secretKeyRef:
                  name: {{ .postgresSecretName }}
                  key: username
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .postgresSecretName }}
                  key: password                        
            {{- end }}
          envFrom:
            - configMapRef:
                name: {{ $mapproxinatorConfigmapName }}
          volumeMounts:
            - name: shared-config
              mountPath: /uwsgi_config
            - mountPath: /mapproxy/mapproxy.yaml
              name: mapproxy-config
              subPath: mapproxy.yaml
            - mountPath: /mapproxy/updated_time.json
              name: mapproxy-config
              subPath: updated_time.json
            - mountPath: "/mapproxy/uwsgi.ini"
              name: uwsgi-config
              subPath: uwsgi.ini
            - mountPath: "/mapproxy/log.ini"
              name: uwsgi-config
              subPath: log.ini
            {{- if eq (upper $storage.mapproxyConfigProvider) "FS" }}
            - mountPath: /configSource/mapproxy.yaml
              name: sources-storage
              subPath: config/mapproxy.yaml
            {{- end }}
            {{- if $db.sslEnabled }}
            - mountPath: {{ .Values.mapproxinator.env.ssl.CA_DIR }}
              name: ca-file
            - mountPath: {{ .Values.mapproxinator.env.ssl.KEY_DIR }}
              name: key-file
            - mountPath: {{ .Values.mapproxinator.env.ssl.CERT_DIR }}
              name: cert-file
            {{- end }}
            {{- if .Values.global.ca.secretName }}
            - mountPath: {{ printf "%s/%s" .Values.global.ca.path .Values.global.ca.key | quote }}
              name: root-ca
              subPath: {{ quote .Values.global.ca.key }}
            {{- end }}
            {{- if .Values.authentication.ssl.enabled }}
            - mountPath: "/etc/ssl/openssl.cnf"
              name: open-ssl
              subPath: "openssl.cnf"
            {{- end }}
          {{- if .Values.mapproxinator.resources.enabled }}
          resources:
            {{- toYaml .Values.mapproxinator.resources.value | nindent 12 }}
          {{- end }}
          ports:
            - name: http
              containerPort: {{ .Values.mapproxinator.targetPort }}
              protocol: TCP
          livenessProbe:
            initialDelaySeconds: {{ .Values.initialDelaySeconds }}
            httpGet:
              path: /liveness
              port: {{ .Values.mapproxinator.targetPort }}
{{- end }}
